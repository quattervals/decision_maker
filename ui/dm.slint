import { TabWidget, TextEdit, Button, VerticalBox, StandardTableView, ListView, StandardListView, HorizontalBox, StandardButton } from "std-widgets.slint";

component Compete inherits Rectangle {

    VerticalBox {
        Text {
            horizontal-alignment: center;
            vertical-alignment: center;
            text: "Which one do you value higher?\nClick the corresponding button";
        }

        HorizontalBox {
            Button {
                text: "This";
            }

            Button {
                text: "That";
            }
        }
    }
}

component EditParams inherits Rectangle {

    callback append <=> append.clicked;
    callback parameters_edited(string);
    in-out property <string> parameters: "";

    HorizontalLayout {

        VerticalBox {

            preferred-width: parent.width * 3 / 4;
            Text {
                text: "Enter Parameters";
            }

            pe := TextEdit {
                font-size: 14px;

                text: root.parameters;
                edited(text) => {
                    root.parameters_edited(self.text);
                }
            }
        }

        VerticalBox {
            preferred-width: parent.width * 1 / 4;
            Button {
                text: "Show";
            }

            Button {
                text: "Discard";
            }

            append := Button {
                text: "Append";
                clicked => {
                    root.parameters_edited(pe.text);
                }
            }

            Button {
                text: "Play";
            }
        }
    }
}

export struct Parameter  {
    name: string,
    score: int,
}
component Results inherits ListView {

    in property <[Parameter]> results;

    for data in results: HorizontalBox {
        Text {
            text: data.name;
        }

        Text {
            text: data.score;
        }
    }
}

export component DdDialog inherits Dialog {
    Rectangle {
        HorizontalLayout {
            spacing: 5px;
            StandardButton {
                kind: retry;
            }

            StandardButton {
                kind: close;
            }
        }
    }
}

export component MainWindow inherits Window {
    preferred-width: 400px;
    preferred-height: 400px;
    title: "Decision Maker";
    icon: @image-url("favicon/D.png");

    callback append;
    callback parameters_edited(string);
    in-out property <string> parameters;

    in property <[Parameter]> results;

    VerticalBox {
        TabWidget {
            Tab {
                title: "Collect\nParameters";
                EditParams {
                    background: orange;
                    append => {
                        root.append();
                    }
                    parameters_edited(bla) => {
                        root.parameters_edited(bla);
                    }
                    parameters: root.parameters;
                }
            }

            Tab {
                title: "Compete";
                Compete {
                    // background: pink;
            }
            }

            Tab {
                title: "Ranking";
                Results {
                    results: root.results;
                }
            }
        }

        DdDialog {
            preferred-height: 25px;
        }
    }
}
