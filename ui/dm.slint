import { TabWidget, TextEdit, Button, VerticalBox, StandardTableView, ListView, StandardListView, HorizontalBox } from "std-widgets.slint";


component EditParams inherits Rectangle {

    callback append <=> append.clicked;
    callback parameters_edited(string);
    in-out property <string> parameters: "";

    HorizontalLayout {

        VerticalBox {

            preferred-width: parent.width * 3 / 4;
            Text {
                text: "Enter Parameters";
            }

            pe := TextEdit {
                font-size: 14px;

                text: root.parameters;
                edited(text) => {
                    root.parameters_edited(self.text);
                }
            }
        }

        VerticalBox {
            preferred-width: parent.width * 1 / 4;
            Button {
                text: "Show";
            }

            Button {
                text: "Discard";
            }

            append := Button {
                text: "Append";
                clicked => {
                    root.parameters_edited(pe.text);
                }
            }

            Button {
                text: "Play";
            }
        }
    }
}

component Compete inherits Rectangle { }

component Results inherits StandardListView { }

export struct RS  {
    name: string,
    score: int,
}
component Results2 inherits ListView {

    in property <[RS]> results;


    for data in results: HorizontalBox {
        Text {
            text: data.name;
        }

        Text {
            text: data.score;
        }
    }
}

export component MainWindow inherits Window {
    preferred-width: 400px;
    preferred-height: 326px;

    callback append;
    callback parameters_edited(string);
    in-out property <string> parameters;

    in property <[RS]> results2: [{ name: "asdf", score: 1 }, { name: "asdfdff", score: 44 }];
    in property <[StandardListViewItem]> results;
    TabWidget {
        Tab {
            title: "Collect\nParameters";
            EditParams {
                background: orange;
                append => {
                    root.append();
                }
                parameters_edited(bla) => {
                    root.parameters_edited(bla);
                }
                parameters: root.parameters;
            }
        }

        Tab {
            title: "Compete";
            Compete {
                background: pink;
            }
        }

        Tab {
            title: "Compete";
            Results2 {
                results: root.results2;
            }
        }

        Tab {
            title: "Ranking";
            Results {
                model: root.results;
            }
        }
    }
}
