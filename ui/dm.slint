import { VerticalBox } from "std-widgets.slint";

import { DecisionDialog } from "dialog.slint";
import { EditParams, Compete, Results, Winner, Parameter } from "components.slint";


export component MainWindow inherits Window {
    preferred-width: 400px;
    preferred-height: 400px;
    title: "Decision Maker";
    icon: @image-url("favicon/D.png");

    // edit
    callback show;
    callback discard;
    callback append;
    callback parameters_edited(string);
    in-out property <string> parameters;

    //compete
    in property <string> lhs_param_name:  "-";
    in property <string> rhs_param_name:  "-";

    callback next_pair(Winner);

    //results
    in property <[Parameter]> results;

    //dialog
    in property <bool> play_enabled: false;
    in property <bool> results_enabled: false;

    callback dialog_play;
    callback dialog_return_edit;
    callback dialog_results;

    // visibility
    in-out property <bool> edit_visible: true;
    in-out property <bool> compete_visible: false;
    in-out property <bool> result_visible: false;

    VerticalBox {

        Rectangle {

            preferred-height: parent.height * 4 / 5;

            EditParams {
                visible: edit_visible;
                background: orange;

                show => {
                    root.show();
                }
                discard => {
                    root.discard();
                }
                append => {
                    root.append();
                }
                parameters_edited(t) => {
                    root.parameters_edited(t);
                }
                parameters: root.parameters;
            }

            Compete {
                background: slategray;
                visible: compete_visible;
                lhs_name: root.lhs_param_name;
                rhs_name: root.rhs_param_name;

                next_pair(w) => {
                    root.next_pair(w);
                }
            }

            Results {
                background: lightskyblue;
                visible: result_visible;
                results: root.results;
            }
        }

        DecisionDialog {
            play_enabled: root.play_enabled;
            results_enabled: root.results_enabled;
            preferred-height: parent.height * 1 / 5;
            background: slategray;

            play => {
                root.dialog_play();
            }
            return_edit => {
                root.dialog_return_edit();
            }
            results => {
                root.dialog_results();
            }
        }
    }
}
